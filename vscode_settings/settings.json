{
  "security.workspace.trust.untrustedFiles": "open",

  "files.defaultLanguage": "markdown",

  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,

  "search.useIgnoreFiles": false,
  "search.exclude": {
    "**/*.git": true,
    ".angular": true,
    ".firebase": true,
    "dist": true,
    "dist/*": true,
    "package-lock.json": true,
    "**/node_modules": true,
    "**/out": true,
  },

  "workbench.preferredDarkColorTheme": "Abyss",
  "workbench.colorTheme": "Noctis Azureus",
  "workbench.startupEditor": "none",

  "editor.fontSize": 13,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "string.quoted.docstring.multi.python",
        "settings": {
          "foreground": "#636e87" //change to your preference
        }
      }
    ]
  },
  "editor.inlineSuggest.enabled": true,
  "editor.accessibilitySupport": "off",

  "terminal.integrated.fontSize": 13,
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "terminal.integrated.fontFamily": "SauceCodePro Nerd Font",
  "terminal.integrated.env.linux": {
    "PATH": "${env:PATH}"
  },
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },

  // GIT SETTINGS
  "git.suggestSmartCommit": false,

  // VIM SETTINGS
  "vim.easymotion": true,
  "vim.leader": "<space>",
  "vim.hlsearch": true,
  "vim.useSystemClipboard": true,
  // "vim.smartRelativeLine": true,
  "vim.handleKeys": {
    "<C-n>": false
  },
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    },
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // IDE Navigation
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    {
      "before": ["<C-u>"],
      "after": ["2", "0", "k"]
    },
    {
      "before": ["<C-d>"],
      "after": ["2", "0", "j"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.navigateLeft"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.navigateDown"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.navigateUp"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.navigateRight"]
    },
    {
      "before": ["C-`"],
      "commands": ["workbench.action.focusActiveEditorGroup", "workbench.action.terminal.focus"]
    },
    {
      "before": ["<leader>", "o"],
      "commands": [":only"]
    },
    {
      "before": ["<leader>", "f", "t"],
      "command": "nerdtree.unfocusSidebarOrClose",
      "when": "sideBarVisible && filesExplorerFocus",
      "after": []
    },
    {
      "before": ["<leader>", "f", "t"],
      "commands": ["workbench.files.action.focusFilesExplorer"],
      "when": "sideBarVisible && !filesExplorerFocus && !suggestWidgetVisible && vim.mode != 'Insert'",
      "after": []
    },
    {
      "before": ["<leader>", "f", "t"],
      "commands": ["workbench.files.action.focusFilesExplorer"],
      "when": "!sideBarVisible && !suggestWidgetVisible && vim.mode != 'Insert'",
      "after": []
    },
    {
      "before": ["<leader>", "f", "t"],
      "commands": ["workbench.files.action.focusFilesExplorer"],
      "when": "!sideBarVisible && !suggestWidgetVisible && vim.mode != 'Insert'",
      "after": []
    },
    {
      "before": ["<leader>", "w", "/"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "w", "\\"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "w", "-"],
      "commands": ["workbench.action.splitEditorOrthogonal"]
    },
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "b", "b"],
      "commands": ["workbench.files.action.focusOpenEditorsView"]
    },
    { 
      "before": ["<leader>", "r", "r"],
      "commands": ["filesExplorer.findInWorkspace"]
    },
    {
      "before": ["<leader>", "t", "n"],
      "commands": ["workbench.action.openNextRecentlyUsedEditor"]
    },
    {
      "before": ["<leader>", "t", "m"],
      "commands": ["workbench.action.openPreviousRecentlyUsedEditor"]
    },
    {
      "before": ["<leader>", "t", "o"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    // "Isolate" closes extra panels
    {
      "before": ["<leader>", "i", "s"],
      "commands": ["workbench.action.closeSidebar",
                   "workbench.action.closePanel",
                   "workbench.action.closeAuxiliaryBar"
      ]
    },
    {
      "before": ["<leader>", "v", "e"],
      "commands": ["workbench.action.openSettingsJson"]
    },


    // Code Stuff
    {
      "before": ["leader", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["<leader>", "j", "j"],
      "after": ["<leader>", "<leader>", "s"]
    },

    // File management
    {
      "before": ["leader", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["leader", "u"],
      "commands": [
        "editor.action.addSelectionToNextFindMatch",
        "workbench.action.findInFiles",
      ]
    },
    {
      "before": ["leader", "r"],
      "commands": [
        "editor.action.rename"
      ]
    },

    // Source control
    {
      "before": ["<leader>", "g"],
      "commands": ["workbench.view.scm"]
    },
    {
      "before": ["<leader>", "g", "d"],
      "commands": ["workbench.view.scm"]
    },

    // for changes on the current line
    {
      "before": ["<leader>", "g", "l", "d"],
      "commands": ["gitlens.diffLineWithWorking"]
    },
    {
      "before": ["<leader>", "g", "d"],
      "commands": ["gitlens.compareWorkingWith"]
    },
    {
      "before": ["<leader>", "g", "p"],
      "commands": ["git.pull"]
    },
    {
      "before": ["<leader>", "g", "v"],
      "commands": ["git.checkout"]
    },
    {
      "before": ["<leader>", "g", "c", "b"],
      "commands": ["git.branchFrom"]
    },
    {
      "before": ["<leader>", "g", "n"],
      "commands": ["workbench.action.compareEditor.nextChange"]
    },
    {
      "before": ["<leader>", "g", "m"],
      "commands": ["workbench.action.compareEditor.previoushange"]
    },
    {
      "before": ["<leader>", "g", "o"],
      "commands": ["gitlens.openFileOnRemote"]
    },
    // {
    //   "before": ["<leader>", "g", "h"],
    //   "commands": ["timeline.focus"]
    // },
    // {
    //   "before": ["<leader>", "g", "m"],
    //   "commands": ["git blame??"]
    // },

    // Debugging
    {
      "before": ["<leader>", "d", "c"],
      "commands": ["workbench.action.debug.continue"]
    },
    {
      "before": ["<leader>", "d", "o"],
      "commands": ["workbench.action.debug.stepOver"]
    },
    {
      "before": ["<leader>", "d", "s"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["<leader>", "d", "p"],
      "commands": ["workbench.action.debug.stop"]
    },
    {
      "before": ["<leader>", "d", "r"],
      "commands": ["workbench.action.debug.restart"]
    },
    {
      "before": ["<leader>", "d", "t"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },

    // Copilot
    {
      "before": ["<leader>", "c", "c"],
      "commands": ["workbench.panel.chat"],
      "after": []
    },
    {
      "before": ["<leader>", "c", "i"],
      "commands": ["inlineChat.startWithCurrentLine"],
      "after": []
    },
    // Wiki/knowledgebase stuff
    {
      "before": ["<leader>", "w", "<leader>", "w"],
      "commands": ["dendron.createDailyJournalNote"]
    },
    {
      "before": ["<leader>", "c"],
      "commands": ["dendron.completeTask"]
    },
  ],

  // MACROS
  // Matched up toe keybindings
"multiCommand.commands": [
  {
    "command": "multiCommand.checkboxToggle",
    "sequence": [
      "editor.action.clipboardCopyWithSyntaxHighlightingAction",
      "cursorHome",
      "actions.find",
      {
        "command": "type",
        "args": { "text": "\\[ \\]" }
      },
      "editor.action.nextMatchFindAction",
      {
        "command": "editor.action.deleteLines",
        "args": { "forward": false }
      },
      {
        "command": "editor.action.insertSnippet",
        "args": {
          "snippet": "${CLIPBOARD/\\[ \\]/[x]/g}"
        }
      },
      "closeFindWidget",
      {
        "command": "type",
        "args": "\n"
      },
    ]
  }
],








  // LANGUAGE SETTINGS
  // MARKDOWN
  "[markdown]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },

  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // JSON
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // PYTHON 
  "python.languageServer": "Pylance",
  "python.analysis.extraPaths": [
    "/Applications/Talon.app/Contents/Resources",
    "/Applications/Talon.app/Contents/Resources/python/lib/python3.11/site-packages" 
  ],
  "python.defaultInterpreterPath": "/Applications/Talon.app/Contents/Resources/python/bin/python3",
  "python.analysis.stubPath": "/Applications/Talon.app/Contents/Resources/python/lib/python3.11/site-packages",
  "[python]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "always",
    },
  },
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": true,
  "python.testing.unittestArgs": [
    "-v",
    "-s",
    ".",
    "-p",
    "*test*.py",
    "--reuse-db"
  ],

  // HTML
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": false
  },

  // JAVASCRIPT
  "javascript.validate.enable": false,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // TYPESCRIPT
  "typescript.updateImportsOnFileMove.enabled": "always",
  "eslint.format.enable": true,
  "typescript.validate.enable": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },

  // CSS
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "postcssSorting.config": {
    "order": [
      "custom-properties",
      "dollar-variables",
      "declarations",
      "at-rules",
      "rules"
    ],
    "properties-order": [
      "display",
      "position",
      "top",
      "right",
      "bottom",
      "left"
    ]
  },
  "editor.inlineSuggest.suppressSuggestions": true,
  "git.ignoreMissingGitWarning": true,
  "files.eol": "\n",
  "editor.renderWhitespace": "none",
  "git.openRepositoryInParentFolders": "never",
  "git.autofetch": true,
  "git.confirmSync": false,
  "cmake.configureOnOpen": true,
  "ShortcutMenuBar.navigateBack": false,
  "ShortcutMenuBar.navigateForward": false,
  "ShortcutMenuBar.startDebugging": true,
  "ShortcutMenuBar.toggleRenderWhitespace": true,
  "ShortcutMenuBar.toggleWordWrap": true,
  "ShortcutMenuBar.userButton01Command": "cursorless.toggleDecorations",
  "ShortcutMenuBar.openFilesList": false,
  "ShortcutMenuBar.toggleTerminal": false,
  "files.associations": {
    "*.talon": "makefile"
  },
  "remote.SSH.remotePlatform": {
    "10.181.11.4": "linux"
  },
  "cursorless.hatEnablement.shapes": {
    "bolt": true,
    "curve": true,
    "fox": true,
    "frame": true,
    "play": true
  },
  "editor.lineHeight": 30,
  "workbench.iconTheme": "ayu",
  "remote.autoForwardPortsSource": "hybrid",
  "cmake.showOptionsMovedNotification": false,
  "clangd.detectExtensionConflicts": false,
  "cursorless.experimental.keyboard.modal.keybindings.vscodeCommand": {

  },
  "cursorless.hatSizeAdjustment": 25,
  "cursorless.hatVerticalOffset": 10,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.inlayHints.enabled": "off",
  "workbench.colorCustomizations": {
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f"
  },
  "editor.wordWrap": "off",
  "diffEditor.wordWrap": "off",
  "editor.guides.indentation": false,
  "editor.guides.bracketPairs": false,
  "vscode_custom_css.imports": [
    "file:///Users/tomcraig/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.2/dist/updateHandler.js"
  ],
  "debug.toolBarLocation": "commandCenter",
  "editor.autoClosingBrackets": "never",
  "editor.autoClosingComments": "never",
  "editor.autoClosingQuotes": "never",
  "search.mode": "newEditor",
  "githubPullRequests.pushBranch": "always",
  "workbench.preferredLightColorTheme": "Ayu Light Bordered",
  "editor.formatOnSaveMode": "modifications",
  "editor.minimap.enabled": false,
  "gitlens.views.commits.files.layout": "tree",
  "gitlens.views.commitDetails.files.layout": "tree",
  "workbench.editor.tabSizing": "fixed",
  "peacock.color": "#d08770",
  "window.zoomLevel": 1.4,
  "githubPullRequests.pullBranch": "never",
  "githubPullRequests.queries": [
    {
      "label": "Waiting For My Review",
      "query": "repo:${owner}/${repository} is:open review-requested:${user}"
    },
    {
      "label": "Assigned To Me",
      "query": "repo:${owner}/${repository} is:open assignee:${user}"
    },
    {
      "label": "Created By Me",
      "query": "repo:${owner}/${repository} is:open author:${user}"
    },
    {
      "label": "All Merged",
      "query": "repo:${owner}/${repository} is:merged"
    }
  ],
  "debug.onTaskErrors": "showErrors",
  "window.title": "${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}focus:[${focusedView}]",
  "githubPullRequests.fileListLayout": "tree",
  "redhat.telemetry.enabled": false,
  "chat.editing.alwaysSaveWithGeneratedChanges": true,
  "@azure.argTenant": "",
  "database-client.autoSync": true,
  "npm.packageManager": "pnpm",
  "githubPullRequests.createOnPublishBranch": "never",
  "diffEditor.ignoreTrimWhitespace": false,
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "- @azure Rule - Use Azure Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `azure_development-get_best_practices` tool if available."
    }
  ],
  "security.promptForLocalFileProtocolHandling": false
}
